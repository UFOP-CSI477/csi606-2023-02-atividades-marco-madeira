generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")

}

model BloodType {
  id        Int      @id @default(autoincrement())
  type      String
  factor     String
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  person Person[]
}

model State {
  id Int @id@default(autoincrement())
  name String
  acronym String
  created_at DateTime @default(now())
  updater_at DateTime @default(now())

  city City[]
}

model City{
  id Int @id@default(autoincrement())
  name String
  state_id Int
  state State @relation(fields: [state_id], references:[id])
  donationPoint DonationPoint[]
  person Person[] 
}

model Person{
  id Int @id@default(autoincrement())
  name String
  street String
  number String
  additional String 
  rg String
  city_id Int
  city City @relation(fields: [city_id], references:[id])
  blood_type_id Int
  blood_type BloodType @relation(fields: [blood_type_id], references:[id])
  created_at DateTime @default(now())
  updater_at DateTime @default(now())

  donation Donation[]
}

model DonationPoint{
  id Int @id@default(autoincrement())
  name String
  street String
  number String
  additional String 
  city_id Int
  city City @relation(fields: [city_id], references:[id])
  created_at DateTime @default(now())
  updater_at DateTime @default(now())
  donation Donation[]
}

model Donation{
  id Int @id@default(autoincrement())
  person_id Int
  person Person @relation(fields: [person_id], references:[id])
  donation_point_id Int
  donation_point DonationPoint @relation(fields: [donation_point_id], references:[id])
  created_at DateTime @default(now())
  updater_at DateTime @default(now())
}


